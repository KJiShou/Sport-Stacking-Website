name: Deploy to Production
run-name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint and Deploy
    environment: production # Matches GitHub Environment settings

    steps:
      # Step 1: Checkout Code
      - uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # Step 3: Enable Corepack for Yarn
      - name: Enable corepack
        run: corepack enable

      # Step 4: Cache Yarn Modules
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "yarn-dir=$(yarn config get cacheFolder)" >> "$GITHUB_OUTPUT"

      - name: Cache node modules
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.yarn-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Step 5: Install Dependencies
      - name: Install dependencies
        run: yarn

      # Step 6: Lint Code
      - name: Run lint
        run: yarn lint

      # Step 7: Build the Project
      - name: Build Project
        run: yarn build

      # Step 8: Deploy to Server
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          # Replace this command with your actual deployment commands
          # Example: scp -r dist/* user@server:/path/to/deploy
